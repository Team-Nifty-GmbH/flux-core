name: tests

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  laravel:
    name: Laravel (PHP ${{ matrix.php-versions }})
    runs-on: self-hosted
    env:
      DB_DATABASE: laravel
      DB_USERNAME: root
      DB_PASSWORD: password
      BROADCAST_DRIVER: log
      CACHE_DRIVER: redis
      QUEUE_CONNECTION: redis
      SESSION_DRIVER: redis

    # Docs: https://docs.github.com/en/actions/using-containerized-services
    services:
      selenium:
        image: seleniarm/standalone-chromium
        ports:
          - 4444:4444
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel
        ports:
          - 33306:3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis
        ports:
          - 6379:6379/tcp
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3
      meilisearch:
        image: getmeili/meilisearch:latest
        ports:
          - 7700/tcp
        options: --health-cmd="wget --no-verbose --spider http://localhost:7700/health" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: false
      matrix:
        php-versions: [ '8.2' ]
        browser: [ 'chrome' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, dom, fileinfo, mysql, imagick
          coverage: xdebug
        env:
          runner: self-hosted

      - name: Cache composer dependencies
        run: |
          echo "COMPOSER_CACHE_DIR=$(composer config cache-files-dir)" >> $GITHUB_ENV

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install npm dependencies
        run: npm ci

      - name: Run npm build
        run: npm run build

        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          REDIS_PORT: ${{ job.services.redis.ports['6379'] }}
          MEILISEARCH_HOST: http://0.0.0.0:${{ job.services.meilisearch.ports['7700'] }}

#      - name: Run Feature Tests
#        run: composer test-feature
#        env:
#          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
#          REDIS_PORT: ${{ job.services.redis.ports['6379'] }}
#          MEILISEARCH_HOST: http://0.0.0.0:${{ job.services.meilisearch.ports['7700'] }}
#
#      - name: Run Livewire Tests
#        run: composer test-livewire
#        env:
#          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
#          REDIS_PORT: ${{ job.services.redis.ports['6379'] }}
#          MEILISEARCH_HOST: http://0.0.0.0:${{ job.services.meilisearch.ports['7700'] }}

#      - name: Install ChromeDriver
#        run: ./vendor/bin/dusk-updater detect --chrome-dir=/usr/local/bin/chromium-browser  --all --auto-update

      - name: Run Browser Tests
        run: composer test-browser
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          REDIS_PORT: ${{ job.services.redis.ports['6379'] }}
          MEILISEARCH_HOST: http://0.0.0.0:${{ job.services.meilisearch.ports['7700'] }}
          DUSK_DRIVER_URL: http://0.0.0.0:${{ job.services.selenium.ports['4444'] }}/wd/hub

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ matrix.browser }}
          path: tests/Browser/screenshots/*.png
